<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:.5in .5in .5in .5in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-GB>

<div class=WordSection1>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;vertical-align:
top'><b><i><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:black'>LinuxKI Warning</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black'>Poor Performance for Linux SAP
clients accessing DB2 database server</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Date:
01/08/2014&nbsp;</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Problem</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>When
using an application running on a remote DB2 client such as SAP, poor
performance can be observed when accessing the DB2 database&nbsp;due to a high
number of failed&nbsp;semget() calls&nbsp;used by the internal trace facility
(db2trc), even if tracing facility is not enabled.</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Background</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>In
a recent benchmark, a customer was comparing the performance of their SAP
application running on a remote DB2 client using both an HP DL380 (Linux)
server and an IBM P770 (AIX) server.&nbsp;&nbsp; While the P770 server had a
higher clock speed (3.1 GHz) than the DL380 (2.2 GHz), the performance of the
DL380 was 2.5 to 3 times worse, which is worse than expected.&nbsp; &nbsp;</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Investigation</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>While
the CPU speed was considered a primary factor</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Arial",sans-serif'>, Linux KI<u> </u><span
style='color:black'>trace data was collected for 40 </span>seconds&nbsp;with
the runki script and analyzed to understand how the SAP client processes spent
their time.&nbsp; Below is edited output from the PID Analysis Report (kiinfo
-kipid) for one of the SAP client processes:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>PID
1026&nbsp; dw.sapRU1_D00<br>
&nbsp; PPID 7939&nbsp; dw.sapRU1_D00</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
********* SCHEDULER ACTIVITY REPORT ********<br>
&nbsp;&nbsp;&nbsp; RunTime&nbsp;&nbsp;&nbsp; :&nbsp; 6.187232&nbsp;
SysTime&nbsp;&nbsp; :&nbsp; 0.451327&nbsp;&nbsp; UserTime&nbsp;&nbsp; :&nbsp;
5.735905<br>
&nbsp;&nbsp;&nbsp; <span style='background:yellow'>SleepTime&nbsp; :
31.581517&nbsp; </span>Sleep Cnt :&nbsp;&nbsp;&nbsp;&nbsp; 30901&nbsp;&nbsp;
Wakeup Cnt :&nbsp;&nbsp;&nbsp;&nbsp; 26398<br>
&nbsp;&nbsp;&nbsp; RunQTime&nbsp;&nbsp; :&nbsp; 2.191165&nbsp; Switch
Cnt:&nbsp;&nbsp;&nbsp;&nbsp; 35158&nbsp;&nbsp; PreemptCnt
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4257<br>
&nbsp;&nbsp;&nbsp; Last CPU&nbsp;&nbsp;
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp; CPU Migrs
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7346&nbsp;&nbsp; NODE Migrs
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4128<br>
&nbsp;&nbsp;&nbsp; Policy&nbsp;&nbsp;&nbsp;&nbsp; :
SCHED_NORMAL&nbsp;&nbsp;&nbsp;&nbsp; vss :&nbsp;&nbsp;
8060548&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rss
:&nbsp;&nbsp;&nbsp;&nbsp; 58919</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
busy&nbsp;&nbsp; :&nbsp;&nbsp;&nbsp;&nbsp; 15.48%<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sys&nbsp; :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.13%<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; user :&nbsp;&nbsp;&nbsp;&nbsp; 14.35%<br>
&nbsp;&nbsp;&nbsp; runQ&nbsp;&nbsp; :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.48%<br>
&nbsp;&nbsp;&nbsp; sleep&nbsp; :&nbsp;&nbsp;&nbsp;&nbsp; 79.03%</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Note
that while the CPU is slower,&nbsp;the process spends most of its
time&nbsp;sleeping.&nbsp;&nbsp; The System Call Report&nbsp;for this process
shows the following:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
******** SYSTEM CALL REPORT ********<br>
&nbsp;&nbsp;&nbsp; System Call Name&nbsp;&nbsp;&nbsp;&nbsp;
Count&nbsp;&nbsp;&nbsp;&nbsp; Rate&nbsp;&nbsp;&nbsp;&nbsp;
ElpTime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Avg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Max&nbsp;&nbsp;&nbsp;
Errs&nbsp;&nbsp;&nbsp; AvSz&nbsp;&nbsp;&nbsp;&nbsp; KB/s<br>
&nbsp;&nbsp;&nbsp;
semget&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
27022&nbsp;&nbsp;&nbsp; 676.2&nbsp;&nbsp; 26.619859&nbsp;&nbsp;
0.000985&nbsp;&nbsp; 0.006248&nbsp;&nbsp; 27022<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SLEEP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
26305&nbsp;&nbsp;&nbsp; 658.3&nbsp;&nbsp; 24.837537&nbsp;&nbsp; 0.000944<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='background:
yellow'>Sleep Func&nbsp;&nbsp;&nbsp;&nbsp;
26304&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
24.837537&nbsp;&nbsp; 0.000944&nbsp;&nbsp; 0.006212&nbsp;
rwsem_down_failed_common<br>
</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
RUNQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1.462762<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.319563<br>
&nbsp;&nbsp;&nbsp;
recvfrom&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4649&nbsp;&nbsp;&nbsp; 116.3&nbsp;&nbsp;&nbsp; 7.017916&nbsp;&nbsp;
0.001510&nbsp;&nbsp; 0.110619&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
60&nbsp;&nbsp;&nbsp;&nbsp; 761&nbsp;&nbsp;&nbsp;&nbsp; 86.5<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SLEEP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4535&nbsp;&nbsp;&nbsp; 113.5&nbsp;&nbsp;&nbsp; 6.711683&nbsp;&nbsp; 0.001480<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sleep
Func&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4535&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
6.711683&nbsp;&nbsp; 0.001480&nbsp;&nbsp; 0.110599&nbsp; sk_wait_data<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
RUNQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.250706<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.055527<br>
&nbsp;&nbsp;&nbsp;
sendto&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4485&nbsp;&nbsp;&nbsp; 112.2&nbsp;&nbsp;&nbsp; 0.073516&nbsp;&nbsp;
0.000016&nbsp;&nbsp; 0.001277&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;
686&nbsp;&nbsp;&nbsp;&nbsp; 75.2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
RUNQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.004954<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.068562</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Note
that the process made 27022 semget() calls that all failed (27022
errors).&nbsp;&nbsp; Many of the calls to semget() would sleep on trying to
obtain an exclusive lock on the internal semaphore's rwsem
lock.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The lock contention is due to many SAP
processes calling semget() in parallel.&nbsp;&nbsp; Looking at the individual </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif'>kitrace <span
style='color:black'>records for the processes, we can verify that all the
semget() calls fail with an errno 2 (ENOENT) using the same semaphore key
value:</span></span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
0.100159 cpu=2 pid=1026 recvfrom ret=0xd68 syscallbeg=&nbsp;&nbsp;&nbsp;
0.000802 sockfd=9 *buf=0x2b035e9d5fe0 len=131072 flags=0x0 *src_addr=0x0
*addrlen=0x0<br>
&nbsp;&nbsp;&nbsp; 0.100908 cpu=3 pid=1026 semget <span style='background:yellow'>ret=-2</span>
syscallbeg=&nbsp;&nbsp;&nbsp; 0.000725 <span style='background:yellow'>key=0x10cabb74
</span>nsems=1 semflag=0x0<br>
&nbsp;&nbsp;&nbsp; 0.101352 cpu=3 pid=1026 semget ret=-2
syscallbeg=&nbsp;&nbsp;&nbsp; 0.000441 key=0x10cabb74 nsems=1 semflag=0x0<br>
&nbsp;&nbsp;&nbsp; 0.102538 cpu=3 pid=1026 semget ret=-2
syscallbeg=&nbsp;&nbsp;&nbsp; 0.001183 key=0x10cabb74 nsems=1 semflag=0x0<br>
&nbsp;&nbsp;&nbsp; 0.103752 cpu=3 pid=1026 semget ret=-2
syscallbeg=&nbsp;&nbsp;&nbsp; 0.001210 key=0x10cabb74 nsems=1 semflag=0x0<br>
&nbsp;&nbsp;&nbsp; 0.104775 cpu=3 pid=1026 semget ret=-2
syscallbeg=&nbsp;&nbsp;&nbsp; 0.001020 key=0x10cabb74 nsems=1 semflag=0x0<br>
&nbsp;&nbsp;&nbsp; 0.106332 cpu=3 pid=1026 semget ret=-2
syscallbeg=&nbsp;&nbsp;&nbsp; 0.001554 key=0x10cabb74 nsems=1 semflag=0x0<br>
&nbsp;&nbsp;&nbsp; 0.106633 cpu=3 pid=1026 writev ret=0x224
syscallbeg=&nbsp;&nbsp;&nbsp; 0.000016 fd=16 *iov=0x7fffa5a18230 iovcnt=2&nbsp;</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>This
ENOENT error indicates that the semaphore with the key 0x10cabb74 does not
exist and the&nbsp;IPC_CREAT flag is not set in the semflag
parameter.&nbsp;&nbsp;&nbsp;&nbsp; To identify why the SAP process is trying to
obtain a semaphore using a non-existent key, gstack/pstack was used to identify
user-space stack trace when the semget() call was made:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>#0&nbsp;
0x00000033baaea777 in semget () from /lib64/libc.so.6<br>
#1&nbsp; 0x00002baee1b3c959 in sharedMutexAttach(TRC_SHARED_IPC_INFO_T*, int*)
() from /usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#2&nbsp; 0x00002baee1b3bb60 in sharedAttach(TRC_SHARED_IPC_INFO_T*, bool) ()
from /usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#3&nbsp; 0x00002baee1b37c80 in trcAttachShared () from
/usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#4&nbsp; 0x00002baee1ea4eeb in <span style='background:yellow'>internalProcessTraceInit</span>
() from /usr/sap/RU1/D00/exe/db6_clidriver/lib/<span style='background:yellow'>libdb2.so<br>
</span>#5&nbsp; 0x00002baee1ea4cea in sqltinit () from
/usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#6&nbsp; 0x00002baee2081f9d in CLI_scrollGetDescAttr(db2UCinterface*,
dataDescriptor**, unsigned long*, unsigned char) () from
/usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#7&nbsp; 0x00002baee1c5145c in CLI_sqlCompleteCallback(db2UCinterface*, int) ()
from /usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#8&nbsp; 0x00002baee1e09871 in sqljrRqstComplete(sqljrDrdaArCb*,
db2UCinterface*, int, bool) () from
/usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#9&nbsp; 0x00002baee22ca8d1 in sqljrParseOpenQueryReply(db2UCinterface*) ()
from /usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#10 0x00002baee22e1f45 in sqljrParse(db2UCinterface*) () from
/usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#11 0x00002baee22d397f in sqljrDrdaArOpen(db2UCinterface*, db2UCCursorInfo*) ()
from /usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#12 0x00002baee21255d7 in csmOpen(db2UCinterface*, db2UCCursorInfo*) () from
/usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#13 0x00002baee1c593ab in CLI_sqlOpen(CLI_STATEMENTINFO*, CLI_ERRORHEADERINFO*)
() from /usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#14 0x00002baee1fe112f in SQLExecute2(CLI_STATEMENTINFO*, CLI_ERRORHEADERINFO*)
() from /usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so<br>
#15 0x00002baee1ffc245 in SQLExecute () from /usr/sap/RU1/D00/exe/db6_clidriver/lib/libdb2.so...</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>From
the stack trace, the semaphore appears to be defined in the SQL&nbsp;tracing
facility for DB2 (libdb2.so).&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Note
that the P770 system has the same problem with the failing semget() calls, but
the semget() calls on AIX do not suffer from the same rwlock contention in the
kernel code that Linux does.&nbsp;&nbsp; So what is a minor problem on AIX is a
major problem on Linux.</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif'>Note that
the Kparse report (kiinfo -kparse) has been enhanced in the Linux KI Toolset
2.2 version to detect the issue:</span></p>

<p class=MsoListParagraph style='text-indent:-.25in;line-height:11.25pt;
vertical-align:top'><span lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;
color:red'>Warning: SAP worker task with many semget() errors (Freq &gt; 50)</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>
</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Solution</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>The
problem and its solution are documented by IBM in the following article:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><u><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:#003366'><a
href="https://www-304.ibm.com/support/docview.wss?rs=71&amp;uid=swg21209523&amp;wv=1"><span
style='color:#003366'>https://www-304.ibm.com/support/docview.wss?rs=71&amp;uid=swg21209523&amp;wv=1</span></a></span></u></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>The
solution is to issue the following command at the DB2 client to allocate the
semaphore in question.</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>db2trc
alloc</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Take
special care that the right db2trc binary is used if multiple library versions
are present on the system.&nbsp;&nbsp; Customer should consult with IBM if
further details are needed.&nbsp; </span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.0pt;line-height:107%;
font-family:"Times New Roman",serif'>After implementing the db2trc alloc, the
performance of the DL380 was 30% faster than the P770, despite the difference
in the CPU clock speed for this specific test.&nbsp;</span></p>

</div>

</body>

</html>
