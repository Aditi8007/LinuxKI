<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:r_ansi;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:.5in .5in .5in .5in;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body lang=EN-GB>

<div class=WordSection1>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;vertical-align:
top'><b><i><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:black'>LinuxKI Warning</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black'>Performance impact of barrier
writes on Oracle DB writers using Oracle ASM</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black'>Date: 02/27/2013</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>updated:
11/06/2014</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Problem</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>When
using Oracle Automatic Storage Management (ASM), Oracle accesses the block
devices directly, instead of using a file system.&nbsp;&nbsp;&nbsp; When Oracle
opens the block devices, it sets the O_SYNC flag to ensure that writes are
synchronous.&nbsp;&nbsp;&nbsp;The O_SYNC flag can then potentially cause Linux
to issue barrier writes to the block device for each physical write request
sent to the device.&nbsp;&nbsp; The barrier writes can cause the Oracle DB
writers to be delayed in the io_submit() system call and can result in &quot;Free
buffer busy&quot; wait in Oracle.&nbsp;&nbsp; Barrier writes can also impact
the Oracle Redo Logwriter as well.&nbsp; </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>One
of the purposes of this article is to show how the LinuxKI Toolset can be used
to troubleshoot performance issues on Linux systems.&nbsp; </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Background</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>The
purpose of barrier writes it to ensure the on-disk consistency and ordering of
critical data.&nbsp;&nbsp;&nbsp; The barrier writes are implemented using the
SYNCHRONIZE_CACHE SCSI command.&nbsp;&nbsp;&nbsp;
The&nbsp;&nbsp;SYNCHRONIZE_CACHE command&nbsp;forces the disk to flush its
internal disk cache to the physical spindles, so that a power outage does not
cause any loss of data.&nbsp;&nbsp; However, with more intelligent disk arrays,
with battery-backed (non-volatile) cache, barrier writes are typically not
needed.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Whether
or not the SYNCHRONIZE_CACHE command is issued depends on how the storage array
advertises itself.&nbsp;&nbsp; If the array advertises as &quot;write cache
disabled&quot; or &quot;write through cache&quot;, the SYNCHRONIZE_CACHE
command is not issued.&nbsp;&nbsp; Note that some disk arrays with non-volatile
caches will advertise as &quot;write cache disabled&quot; even though it does
indeed have a write cache.&nbsp;&nbsp;&nbsp;&nbsp; However, if the array
advertises as &quot;write cache enabled&quot; or &quot;writeback cache&quot;,
the SYNCHRONIZE_CACHE command would be sent for synchronous writes to the
device.&nbsp;&nbsp; The write cache behavior can typically be seen during
bootup, for example:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>sd
7:0:5:0: [sdo] Write cache: enabled, read cache: enabled, supports DPO and FUA</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>The
LinuxKI Toolset can show the barrier write and the potential impact it can have
on performance.&nbsp;&nbsp; In the LinuxKI trace data,&nbsp;a barrier write
sequence looks similar to the following...</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>0.018948 cpu=1 pid=9999 block_rq_insert
dev_t=0x04100030 wr=write flags=SYNC|<span style='background:yellow'>FLUSH</span>
<span style='background:yellow'>sector=0x0</span> <span style='background:yellow'>len=0</span></span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif;color:black'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>0.018949 cpu=1 pid=9999 block_rq_issue
dev_t=0x04100030 wr=write flags=SYNC|<span style='background:yellow'>FLUSH</span>
<span style='background:yellow'>sector=0xffffffffffffffff</span> <span
style='background:yellow'>len=0</span></span><span lang=EN-US style='font-size:
9.0pt;font-family:"Arial",sans-serif;color:black'> </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>0.019129
cpu=18 pid=13147 block_rq_complete dev_t=0x04100030 wr=write flags=SYNC <span
style='background:yellow'>sector=0x0</span> <span style='background:yellow'>len=0</span>
qpid=0 spid=0 qtm= 0.000000 svtm= 0.000000</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Note
that the block_rq_insert and block_rq_issue records will have the FLUSH flag
set.&nbsp;&nbsp; The sector will be either 0x0 or 0xffffffffffffffff, and the
length will be 0.&nbsp;&nbsp;&nbsp; For the block_rq_complete will be similar,
but the FLUSH flag may be cleared.&nbsp;&nbsp; Also note that the service time
(svtm) will show 0.000000.&nbsp;&nbsp; Unfortunately, kiinfo cannot track the
queue time (qtm) and service time (svtm) since a valid sector and length are
not used.&nbsp; But note the different time difference between the
block_rq_issue and block_rq_insert is the actual service time (0.019129 -
0x018949 = 0.000180 seconds).&nbsp;&nbsp; Note the barrier write is fast, but
it is overhead and it is synchronous.&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Investigation</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>So
how do the barrier writes impact the Oracle DB writers?&nbsp; First, you need
to understand how Oracle issues asynchronous I/Os when the Oracle parameter
DISK_ASYNC_IO is set to TRUE.&nbsp;&nbsp;&nbsp; Oracle manages the I/O using
the Asynchronous I/O system calls io_submit() and
io_getevents().&nbsp;&nbsp;&nbsp; The io_submit() system call is used to submit
one or more I/Os in parallel, and then io_getevents() is used later to read the
asynchronous I/O events from the completion queue and wait if needed.&nbsp; </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>On
a recent internal Proof-of-Concept testing, a LinuxKI trace sample was taken
with the &quot;runki -p&quot; command.&nbsp;&nbsp; Analysis of one of the
Oracle DB writer processes using kiinfo -kipid showed the following:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>PID
11771&nbsp; ora_dbw0_proddb<br>
&nbsp; PPID 1&nbsp; /sbin/init</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
********* SCHEDULER ACTIVITY REPORT ********<br>
&nbsp;&nbsp;&nbsp; RunTime&nbsp;&nbsp;&nbsp; :&nbsp; 5.438581&nbsp;
SysTime&nbsp;&nbsp; :&nbsp; 3.748545&nbsp;&nbsp; UserTime&nbsp;&nbsp; :&nbsp;
1.690036<br>
&nbsp;&nbsp;&nbsp; SleepTime&nbsp; :&nbsp; 5.243795&nbsp; Sleep Cnt
:&nbsp;&nbsp;&nbsp;&nbsp; 33225&nbsp;&nbsp; Wakeup Cnt
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2523<br>
&nbsp;&nbsp;&nbsp; RunQTime&nbsp;&nbsp; :&nbsp; 9.281119&nbsp; Switch
Cnt:&nbsp;&nbsp;&nbsp;&nbsp; 39427&nbsp;&nbsp; PreemptCnt
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6202<br>
&nbsp;&nbsp;&nbsp; Last CPU&nbsp;&nbsp;
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 12&nbsp; CPU Migrs
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8887&nbsp;&nbsp; NODE Migrs
:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 673<br>
&nbsp;&nbsp;&nbsp; Policy&nbsp;&nbsp;&nbsp;&nbsp; : SCHED_NORMAL</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
******** SYSTEM CALL REPORT ********<br>
&nbsp;&nbsp;&nbsp; System Call Name&nbsp;&nbsp;&nbsp;&nbsp;
Count&nbsp;&nbsp;&nbsp;&nbsp; Rate&nbsp;&nbsp;&nbsp;&nbsp;
ElpTime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Avg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Max Errs<br>
&nbsp;&nbsp;&nbsp;
io_submit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
73&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3.7&nbsp;&nbsp; 16.157268&nbsp;&nbsp; <span
style='background:yellow'>0.221332</span>&nbsp;&nbsp;
0.382323&nbsp;&nbsp;&nbsp; 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SLEEP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
32647&nbsp;&nbsp; 1635.2&nbsp;&nbsp;&nbsp; 5.039375&nbsp;&nbsp; 0.000154<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='background:
yellow'>Sleep Func&nbsp;&nbsp;&nbsp;&nbsp;
32647&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5.039375&nbsp;&nbsp; 0.000154&nbsp;&nbsp; 0.006489&nbsp; wait_for_completion<br>
</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
RUNQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
7.609908<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
3.591303<br>
&nbsp;&nbsp;&nbsp;
semctl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2534&nbsp;&nbsp;&nbsp; 126.9&nbsp;&nbsp;&nbsp; 0.656791&nbsp;&nbsp;
0.000259&nbsp;&nbsp; 0.023531&nbsp;&nbsp;&nbsp; 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
RUNQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.547052<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.109739<br>
&nbsp;&nbsp;&nbsp;
semop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
137&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6.9&nbsp;&nbsp;&nbsp; 0.226927&nbsp;&nbsp;
0.001656&nbsp;&nbsp; 0.021632&nbsp;&nbsp;&nbsp; 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SLEEP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.4&nbsp;&nbsp;&nbsp; 0.133690&nbsp;&nbsp;
0.001249<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sleep
Func&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.133690&nbsp;&nbsp; 0.001249&nbsp;&nbsp; 0.021362&nbsp; sys_semtimedop<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
RUNQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.090507<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.002730<br>
&nbsp;&nbsp;&nbsp;
io_getevents&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
266&nbsp;&nbsp;&nbsp;&nbsp; 13.3&nbsp;&nbsp;&nbsp; 0.003781&nbsp;&nbsp;
0.000014&nbsp;&nbsp; 0.000171&nbsp;&nbsp;&nbsp; 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
RUNQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.000105<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0.003676</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black'>While there is certainly CPU
pressure as the RunQTime is high, notice that most of the Sleep Time is spent
in the io_submit() system call in the kernel function wait_for_completion().
&nbsp;&nbsp; This is unusual since io_submit() system call&nbsp;is supposed to
be doing asynchronous I/O.&nbsp;&nbsp; Note the average time&nbsp;for each
io_submit() call is&nbsp;0.221332 seconds.&nbsp; &nbsp;Typically, a process
would sleep in io_getevents() if the I/O is not completed, but in the above
example, io_getevents() always returns without sleeping.</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>To
understand why the process is sleeping in io_submit(), we can examine the
individual KI trace records from kiinfo -kitrace:</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>Command line: kiinfo -kitrace
pid=11771,sysenter,sysargs -ts 1204_0546 </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>...</span><span lang=EN-US style='font-size:9.0pt;
font-family:"Arial",sans-serif;color:black'> </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
0.274873 cpu=17 pid=11771 io_submit [209] entry ctx_id=0x7f32e270c000 nr=531
**iocbpp=0x7fffa7931c80<br>
&nbsp;&nbsp;&nbsp; 0.274905 cpu=17 pid=11771 block_rq_insert dev_t=0x00800020
wr=write flags=ELVPRIV|SYNC|ALLOCED sector=0x565e00 len=8192<br>
<span style='background:yellow'>&nbsp;&nbsp;&nbsp; 0.274910 cpu=17 pid=11771 block_rq_issue
dev_t=0x00800020 wr=write flags=SORTED|ELVPRIV|SYNC|ALLOCED sector=0x565e00
len=8192<br>
</span>&nbsp;&nbsp;&nbsp; 0.274979 cpu=17 pid=11771 block_rq_insert
dev_t=0x00800020 wr=write flags=SYNC|ALLOCED|NOIDLE|<span style='background:
white'>FLUSH </span>sector=0x0 len=0<br>
<span style='background:yellow'>&nbsp;&nbsp;&nbsp; 0.274981 cpu=17 pid=11771
block_rq_issue dev_t=0x00800020 wr=write flags=SYNC|NOIDLE|FLUSH
sector=0xffffffffffffffff len=0<br>
</span>&nbsp;&nbsp;&nbsp; 0.275061 cpu=17 pid=11771 sched_switch prio=120
state=SSLEEP next_pid=3410 next_prio=120 next_tgid=n/a policy=n/a STACKTRACE:
wait_for_completion+0x1d __blkev_issue_flush+0xad blkdev_issue_flush+0x16
blkdev_fsync+0x3f vfs_fsync_range+0xa1 generic_write_sync+0x4b
blkdev_aio_write+0x7e aio_rw_vect_retry+0x84 aio_run_iocb+0x64
do_io_submit+0x291 sys_io_submit+0x10 tracesys+0xd9<br>
&nbsp;&nbsp;&nbsp; 0.275198 cpu=12 pid=-1 sched_wakeup target_pid=11771
prio=120 target_cpu=17 success=1</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Note
that the processes issued two I/Os, the first for the user data, and the second
for the barrier write.&nbsp; After issuing the barrier write, the process goes
to sleep waiting for the barrier write to complete.&nbsp; We can examine the
trace records for CPU 12 to see what occurred just prior to the sched_wakeup
listed above:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
0.275196 cpu=12 pid=-1 block_rq_complete dev_t=0x00800020 wr=write
flags=SOFTBARRIER|SYNC|ALLOCED|NOIDLE sector=0x0 len=0 qpid=0 spid=0 qtm=&nbsp;
0.000000 svtm=&nbsp;&nbsp; 0.000000<br>
&nbsp;&nbsp;&nbsp; 0.275198 cpu=12 pid=-1 sched_wakeup target_pid=11771
prio=120 target_cpu=17 success=1</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Note
the wakeup occurred just after the completion of the barrier write.&nbsp;&nbsp;
The DB writer isn't waiting for the user data to be written to the disk, but it
is waiting for the completion of the barrier write, which makes the io_submit()
take much longer.&nbsp;</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>With
LinuxKI Toolset 2.0, the SCSI subsystem traces scsi_dispatch_cmd_start and
scsi_dispatch_cmd_done can be enabled to identify the SYNCHRONIZE_CACHE
commands.&nbsp;&nbsp; For example:</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ kiinfo -kitrace subsys=scsi -a 1000 -p 1| grep
SYNC | more </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>...</span><span lang=EN-US style='font-size:9.0pt;
font-family:r_ansi;color:black'> </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
0.001219 cpu=20 pid=156881 scsi_dispatch_cmd_start path=3:0:5:0 <span
style='background:yellow'>opcode=SYNCHRONIZE_CACHE</span><span
style='background:white'> </span>cmd_len=10 data_sglen=0, prot_sglen=0
prot_op=0 cmd=[35 00 00 00 00 00 00 00 00 00]<br>
&nbsp;&nbsp;&nbsp; 0.001370 cpu=4 pid=-1 scsi_dispatch_cmd_done path=3:0:5:0 <span
style='background:yellow'>opcode=SYNCHRONIZE_CACHE</span><span
style='background:white'> </span>cmd_len=10 data_sglen=0, prot_sglen=0
prot_op=0 cmd=[35 00 00 00 00 00 00 00 00 00] result=0</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Solution
/ Workaround</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>As
a result of this investigation, Bugzilla&nbsp;reports 955441 (RHEL 6) and
1022216 (RHEL 7) were filed.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Starting with RHEL
6.5 an RHEL 7, the devices &quot;cache_type&quot; can be modified to alter the
behavior of a disk device.&nbsp;&nbsp;&nbsp; For example, to change the
cache_type of a device to avoid the barrier writes, the device can be changed
from &quot;write back&quot; to &quot;write_through&quot; by writing the value
&quot;temporary write through&quot; to the cache_type file.</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ cat&nbsp;
/sys/devices/pci0000:00/0000:00:05.0/0000:11:00.0/host3/rport-3:0-5/target3:0:5/3:0:5:0/scsi_disk/3:0:5:0/cache_type</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>write back</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ echo &quot;temporary write through&quot; &gt;
/sys/devices/pci0000:00/0000:00:05.0/0000:11:00.0/host3/rport-3:0-5/target3:0:5/3:0:5:0/scsi_disk/3:0:5:0/cache_type</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ echo 1 &gt;
/sys/devices/pci0000:00/0000:00:05.0/0000:11:00.0/host3/rport-3:0-5/target3:0:5/3:0:5:0/rescan</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ cat&nbsp;
/sys/devices/pci0000:00/0000:00:05.0/0000:11:00.0/host3/rport-3:0-5/target3:0:5/3:0:5:0/scsi_disk/3:0:5:0/cache_type</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>write
through</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Note
the device must be rescanned for the change to take affect is only in effect
until the next reboot.&nbsp;&nbsp;&nbsp;&nbsp;The SCSI block devices will need
to be closed and reopened for the change to take effect, which may mean the
applications (such as Oracle)&nbsp;will need to be restarted.&nbsp;&nbsp; Also,
if&nbsp;you are using the multipath driver, you can reconfigure the devices
through the multipathd command as the&nbsp;SCSI block devices are opened by the
multipath daemon:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
$ echo &quot;reconfigure&quot; | multipathd -k&nbsp; </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:red'>CAUTION:&nbsp;
Use with care.&nbsp;&nbsp; <span style='background:white'>Changing the cache
type&nbsp;of a disk device with volatile cache or improperly modifying the
cache_type can result in data loss, data corruption, or performance
degradation.&nbsp;&nbsp;&nbsp;Before using in a production environment, be sure
to test in a test, benchmark, or POC environment to measure the impact and
verify the behavior.&nbsp;</span></span><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black;background:white'>&nbsp; </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Important
note on 3PAR storage arrays</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>The
issue has been common on 3PAR storage arrays that advertise as &quot;Write
cache: enabled&quot;.&nbsp;&nbsp;&nbsp; However, with 3PAR OS version 3.2.1
GA/MU1, the 3PAR storage arrays should now advertise as &quot;Write cache:
disabled&quot;.&nbsp;&nbsp;&nbsp; The change is documented in </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif'>the HP 3PAR
OS 3.2.1 GA/MU1 Release Notes:</span></p>

<table class=MsoNormalTable border=0 cellpadding=0 summary="" width="100%"
 style='width:100.0%'>
 <tr style='height:11.25pt'>
  <td width=83 style='width:60.0pt;padding:.75pt .75pt .75pt .75pt;height:11.25pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
  font-family:"Arial",sans-serif;color:black'>&nbsp;Issue ID</span></b></p>
  </td>
  <td width=322 style='width:240.0pt;padding:.75pt .75pt .75pt .75pt;
  height:11.25pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
  font-family:"Arial",sans-serif;color:black'>Item</span></b></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt;height:11.25pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
  font-family:"Arial",sans-serif;color:black'>Description</span></b></p>
  </td>
 </tr>
 <tr>
  <td width=83 style='width:60.0pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  11.25pt;vertical-align:top'><span lang=EN-US style='font-size:10.0pt;
  font-family:"Arial",sans-serif;color:black'>&nbsp;104168</span></p>
  </td>
  <td width=322 style='width:240.0pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  11.25pt;vertical-align:top'><span lang=EN-US style='font-size:10.0pt;
  font-family:"Arial",sans-serif;color:black'>Correct reporting of writeback
  cache enable bit</span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>The
  WCE bit in the Cache Mode page (08h) is set to zero.&nbsp; This enables
  correct reporting of writeback cache enable bit.</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;line-height:107%;
font-family:"Arial",sans-serif'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;line-height:107%;
font-family:"Arial",sans-serif'>After the 3PAR OS upgrade, be sure to reboot
the Linux server or rescan each of the 3</span><span lang=EN-US
style='line-height:107%;font-family:"Arial",sans-serif'>PAR devices as
previously mentioned.&nbsp;</span></p>

</div>

</body>

</html>
