<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Segoe UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:"Segoe UI",sans-serif;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Segoe UI",sans-serif;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:.5in .5in .5in .5in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-GB>

<div class=WordSection1>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;vertical-align:
top'><b><i><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:black'>LinuxKI Warning</span></i></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><b><span lang=EN-US style='font-size:10.0pt;
font-family:"Arial",sans-serif;color:black'>SV/Posix Semaphore Lock Scaling
Issue</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Date:
10/16/2015</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Problem</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>High
system time and poor performance for applications which employ semaphores, such
as Oracle, on scale-up hardware.</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Investigation</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>On
a Superdome-X system running RHEL 6.7 with Oracle 12c, extremely high system
time was observed.&nbsp; A LinuxKI trace dump was collected (runki) and the Kparse
report (kp.*.html) showed high System CPU utilization:</span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;background:#8CFF8C'>
 <tr>
  <td style='padding:1.5pt 2.25pt 1.5pt 2.25pt'>
  <p class=MsoNormal style='line-height:normal'><a name=subsection1.1></a><b><span
  style='font-family:"Courier New"'>1.1 Global CPU Usage Counters</span></b></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><u><span style='font-size:9.0pt;font-family:"Courier New";color:blue'>[Next
  Subsection]---[Prev Section][Next Section][Table of Contents]</span></u></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;vertical-align:top'><b><span lang=EN-US style='font-size:9.0pt;
font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;
nCPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
sys%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
user%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; idle%</span></b><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif;color:black'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:#CC0000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
89.60%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
8.82%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.59%</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial",sans-serif;color:black'> </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><a
name=warncheck0></a><span lang=EN-US style='font-size:9.0pt;font-family:"Courier New";
color:#CC0000'>Warning: CPU Bottleneck (Idle &lt; 10%)</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>The
Kparse report also showed the semtimedop() and semctl() system calls accounted
for the majority of system CPU consumption:</span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;background:#FFD1A4'>
 <tr>
  <td style='padding:1.5pt 2.25pt 1.5pt 2.25pt'>
  <p class=MsoNormal style='line-height:normal'><a name=subsection1.4.3></a><b><span
  style='font-family:"Courier New"'>1.4.3 Report of non-idle kernel functions
  at each clock tick</span></b></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><u><span style='font-size:9.0pt;font-family:"Courier New";color:blue'>[Prev
  Subsection][Next Subsection]---[Prev Section][Next Section][Table of
  Contents]</span></u></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><b><span style='font-size:9.0pt;font-family:"Courier New";color:black'>  
Count     Pct  Function </span></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>&nbsp;&nbsp; 99387&nbsp; 65.74%&nbsp;
SYS&nbsp;&nbsp;&nbsp; <span style='background:yellow'>sys_semtimedop</span></span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;
36853&nbsp; 24.38%&nbsp; SYS&nbsp;&nbsp;&nbsp; <span style='background:yellow'>sys_semctl</span></span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Examination
of the hardclock records showed three main code locations:</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ grep &quot; hardclock state=SYS sys_sem&quot;
ki.MMDD_HHMM|awk '{print $7}'|sort|uniq -c|sort -rn</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial",sans-serif;color:black'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>&nbsp; 65522 <span style='background:yellow'>sys_semtimedop+0x3c1</span></span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif;color:black'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>&nbsp; 34897 sys_semctl+0x137</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif;color:black'> </span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;
33852 sys_semtimedop+0x615</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>A
review of the kernel debug information via gdb shows inlined sem_lock() </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ cat uname-a.MMDD_HHMM </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>Linux tux 2.6.32-573.el6.x86_64 #1 SMP Wed Jul 1
18:23:37 EDT 2015 x86_64 x86_64 x86_64 GNU/Linux</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ gdb /usr/lib/debug/lib/modules/2.6.32-573.el6.x86_64/vmlinux</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>(gdb) list <span style='background:yellow'>*(sys_semtimedop+0x3c1)</span></span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>0xffffffff81221fa1 is in sys_semtimedop (<span
style='background:yellow'>ipc/sem.c:1668</span>).</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1663&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
error = security_sem_semop(sma, sops, nsops, alter);</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1664&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if (error)</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1665&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
goto out_rcu_wakeup;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1666&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1667&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
error = -EIDRM;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black;background:yellow'>1668</span><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New";color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='background:yellow'>locknum = sem_lock(sma, sops, nsops);</span></span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1669&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if (sma-&gt;sem_perm.deleted)</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1670&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
goto out_unlock_free;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1671&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
/*</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>1672&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
* semid identifiers are not unique - find_alloc_undo may have</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0218><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0218</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'> <i>/*</i></span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0219><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0219</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'> <i>&nbsp;* If the request
contains only one semaphore operation, and there are</i></span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0220><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0220</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'> <i>&nbsp;* no complex
transactions pending, lock only the semaphore involved.</i></span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0221><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0221</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'> <i>&nbsp;* Otherwise, lock
the entire semaphore array, since we either have</i></span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0222><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0222</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'> <i>&nbsp;* multiple
semaphores in our own semops, or we need to look at</i></span><span lang=EN-US
style='font-size:9.0pt;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0223><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0223</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'> <i>&nbsp;* semaphores from
other pending complex operations.</i></span><span lang=EN-US style='font-size:
9.0pt;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0224><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0224</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'> <i>&nbsp;*/</i></span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0225><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0225</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'> static inline <b>int</b>
sem_lock(<b>struct</b> sem_array *sma, <b>struct</b> sembuf *sops,</span><span
lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif'> </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><a name=0226><span lang=EN-US style='font-size:
9.0pt;font-family:"Courier New"'>0226</span></a><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>int</b>
nsops)</span><span lang=EN-US style='font-size:9.0pt;font-family:"Arial",sans-serif'>
</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><a name=0227><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New"'>0227</span></a><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New"'> {</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>sem_lock()
ether obtains the spinlock protecting the entire semaphore set or the spinlock
protecting the individual semaphore.</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>An&nbsp;examination
of the semaphore configuration showed&nbsp;large values for SEMMSL (number of
semaphore per semaphore set) and SEMOPM (maximum number of operations per semop
system call):</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
11.25pt;vertical-align:top'><span lang=EN-US style='font-size:9.0pt;font-family:
"Courier New";color:black'>$ grep sem sysctl-a.MMDD_HHMM</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>kernel.sem
= <span style='background:yellow'>4096</span> 512000 <span style='background:
white'>1600 </span><span style='background:#FFFF80'>2048</span></span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Due
to variations in the Linux kernels, you may not see sys_semtimedop() or
sys_semctl() in the direct CPU hardclock profiles.   Instead, you may find the
function queued_spin_lock_slowpath.   You will need to look at the kernel stack
traces to confirm that the spinlock contention is coming from semtimedop() and semctl().  
For example, below are the hot kernel function:</span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;background:#FFD1A4'>
 <tr>
  <td style='padding:1.5pt 2.25pt 1.5pt 2.25pt'>
  <p class=MsoNormal style='line-height:normal'><b><span style='font-family:
  "Courier New"'>1.4.3 Report of non-idle kernel functions at each clock tick</span></b></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><u><span style='font-size:9.0pt;font-family:"Courier New";color:blue'>[Prev
  Subsection][Next Subsection]---[Prev Section][Next Section][Table of
  Contents]</span></u></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><b><span style='font-size:9.0pt;font-family:"Courier New";color:black'>  
Count     Pct  Function </span></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black;
background:#EEEEEE'>  <span style='background:yellow'>138867  90.30%  SYS    queued_spin_lock_slowpath</span></span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>   
6892   4.48%  USER   0xffffffffffffffff</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black;
background:#EEEEEE'>    2285   1.49%  SYS    __schedule</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
773   0.50%  SYS    sys_semtimedop</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black;
background:#EEEEEE'>     361   0.23%  SYS    do_smart_update</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
222   0.14%  SYS    generic_make_request</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black;
background:#EEEEEE'>     213   0.14%  INTR   walk_tg_tree_from</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
162   0.11%  SYS    SYSC_semtimedop</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:10.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:10.0pt;font-family:"Arial",sans-serif;
color:black'>The queued_spin_lock_slowpath() function can be called by many
other kernel functions, so you will need to look at the kernel stack traces to
confirm the problem is related to semtimedop() and semctl() calls.   </span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:10.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;background:#FFD1A4'>
 <tr>
  <td style='padding:1.5pt 2.25pt 1.5pt 2.25pt'>
  <p class=MsoNormal style='line-height:normal'><b><span style='font-family:
  "Courier New"'>1.4.4 Report of non-idle kernel stack traces at each clock
  tick</span></b></p>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'><u><span style='font-size:9.0pt;font-family:"Courier New";color:blue'><a
  href="http://gse-rose-st068.us.hpecorp.net/work/claus/bb/181003/drl02omsdb004/1112_1354/kp.1112_1354.html#subsection1.4.3"><span
  style='color:blue'>[Prev Subsection]</span></a><a
  href="http://gse-rose-st068.us.hpecorp.net/work/claus/bb/181003/drl02omsdb004/1112_1354/kp.1112_1354.html#subsection1.4.5"><span
  style='color:blue'>[Next Subsection]</span></a><a
  href="http://gse-rose-st068.us.hpecorp.net/work/claus/bb/181003/drl02omsdb004/1112_1354/kp.1112_1354.html#Section1"><span
  style='color:blue'>---[Prev Section]</span></a><a
  href="http://gse-rose-st068.us.hpecorp.net/work/claus/bb/181003/drl02omsdb004/1112_1354/kp.1112_1354.html#Section2"><span
  style='color:blue'>[Next Section]</span></a><a
  href="http://gse-rose-st068.us.hpecorp.net/work/claus/bb/181003/drl02omsdb004/1112_1354/kp.1112_1354.html#TOC"><span
  style='color:blue'>[Table of Contents]</span></a></span></u></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><b><span style='font-size:9.0pt;font-family:"Courier New";color:black'>  
Count     Pct  Stack trace</span></b></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'> 
138618  90.14%  <span style='background:yellow'>queued_spin_lock_slowpath</span> 
<span style='background:yellow'>_raw_spin_lock</span></span><span
style='font-size:9.0pt;font-family:"Courier New";color:#CC0000;background:yellow'> 
</span><span style='font-size:9.0pt;font-family:"Courier New";background:yellow'>SYSC_semtimedop 
sys_semtimedop</span><span style='font-size:9.0pt;font-family:"Courier New"'>  <span
style='color:black'>tracesys</span></span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>   
1890   1.23%  __schedule  schedule  schedule_timeout  SYSC_semtimedop 
sys_semtimedop  tracesys</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
773   0.50%  sys_semtimedop  tracesys</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
361   0.23%  do_smart_update  sys_semctl  tracesys</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
210   0.14%  generic_make_request  submit_bio  asm_submit_io 
asm_submit_io_native  asm_do_io  asmfs_svc_io64  asmfs_file_read  vfs_read 
sys_read  tracesys</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
191   0.12%  walk_tg_tree_from  load_balance  rebalance_domains 
run_rebalance_domains  __do_softirq  call_softirq  do_softirq  irq_exit 
smp_apic_timer_interrupt  apic_timer_interrupt  cpuidle_idle_call 
arch_cpu_idle  cpu_startup_entry  start_secondary</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
161   0.10%  SYSC_semtimedop  sys_semtimedop  tracesys</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
139   0.09%  <span style='background:yellow'>queued_spin_lock_slowpath  _raw_spin_lock 
sys_semctl</span>  tracesys</span></p>

<p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal'><span style='font-size:9.0pt;font-family:"Courier New";color:black'>    
135   0.09%  syscall_trace_leave  int_check_syscall_exit_work</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>LinuxKI
version 5.8 has been enhanced to detect this condition as well.</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><b><span
lang=EN-US style='font-family:"Arial",sans-serif;color:black'>Solution</span></b></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Reducing
SEMMSL to 250 resulted in the required semaphores being spread across a greater
number of semaphore sets, thus reducing the lock contention and resolving the
high system CPU utilization.&nbsp;&nbsp; Note the Oracle 12c documentation
recommends the following:&nbsp;</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New";color:black'>kernel.sem
= <span style='background:yellow'>250</span> 32000&nbsp;<span style='background:
white'>100</span> <span style='background:#FFFF80'>128</span></span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>Please
note that prior to RHEL 6.6 (2.6.32-504) and SLES12, the following critical
locking change is missing which could cause the semaphore set spinlock
contention to be even worse:</span></p>

<p class=MsoNormal style='line-height:11.25pt;vertical-align:top'><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial",sans-serif;color:black'>BZ#880024</span></p>

<p class=MsoNormal><span lang=EN-US style='line-height:107%;font-family:"Times New Roman",serif'>Previously,
the locking of a semtimedop semaphore operation was not fine enough with remote
non-uniform memory architecture (NUMA) node accesses. As a consequence,
spinlock contention occurred, which caused delays in the semop() system call
and high load on the server when running numerous parallel processes accessing
the same semaphore. This update improves scalability and performance of
workloads with a lot of semaphore operations, especially on larger NUMA
systems. This improvement has been achieved by turning the global lock for each
semaphore array into a per-semaphore lock for many semaphore operations, which
allows multiple simultaneous semop() operations. As a result, performance
degradation no longer occurs.</span></p>

</div>

</body>

</html>
